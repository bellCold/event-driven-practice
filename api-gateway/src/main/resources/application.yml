server:
  port: 8080

spring:
  application:
    name: api-gateway-service

  cloud:
    config:
      name: bootstrap
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: API Gateway Global Filter
            preLogger: true
            postLogger: true

      routes:
        - id: user-service
          uri: "${user_service_uri}/api/v1/"
          predicates:
            - Path=/user-service/ping
            - Method=GET
          filters:
            - RewritePath=/user-service/(?<segment>.*),$\{segment}
        - id: user-service
          uri: "${user_service_uri}"
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: "${user_service_uri}"
          predicates:
            - Path=/user-service/reissue
            - Method=GET
          filters:
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: "${user_service_uri}"
          predicates:
            - Path=/user-service/logout
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service
          uri: "${user_service_uri}"
          predicates:
            - Path=/user-service/auth/reissue
            - Method=GET
          filters:
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**
#          filters:
#            - AuthorizationHeaderFilter
#            - RewritePath=/user-service/(?<segment>.*),/$\{segment}


token:
  secret: $2a$10$q42lY7Y18xqrFt1qbODZIO4OMTeOxnrCe7tF3n9bazJinVE7VH5Pi

variables:
  user_service_uri: "http://localhost:8081"